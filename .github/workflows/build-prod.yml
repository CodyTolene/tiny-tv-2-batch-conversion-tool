name: build-prod

on:
  push:
    branches: [ main ]   # release only on merge/push to main

jobs:
  release-windows:
    runs-on: windows-latest
    permissions:
      contents: write  # needed to upload a release asset
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Code format check (Black)
        run: python -m black . --check --diff

      - name: Lint check (Flake8)
        run: python -m flake8

      - name: Download ffmpeg.exe
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path bin | Out-Null
          iwr -Uri https://www.gyan.dev/ffmpeg/builds/ffmpeg-git-full.7z -OutFile ffmpeg.7z
          7z x ffmpeg.7z -y | Out-Null
          $exe = Get-ChildItem -Recurse -Filter ffmpeg.exe | Select-Object -First 1
          $probe = Get-ChildItem -Recurse -Filter ffprobe.exe | Select-Object -First 1
          Copy-Item $exe.FullName bin\ffmpeg.exe
          Copy-Item $probe.FullName bin\ffprobe.exe

      - name: Build exe
        run: |
          python -m PyInstaller --noconfirm --onefile --windowed main.py
          mkdir artifacts
          copy dist\main.exe artifacts\TinyTVTool.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TinyTVTool-release
          path: artifacts/TinyTVTool.exe

      # Auto-create a GitHub Release and attach the exe
      - name: Create Release
        if: startsWith(github.ref, 'refs/heads/main')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: TinyTVTool ${{ github.run_number }}
          draft: false
          prerelease: false
          files: artifacts/TinyTVTool.exe
