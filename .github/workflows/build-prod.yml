name: build-prod

on:
  push:
    branches: [ main ]

jobs:
  release-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Code format check (Black)
        run: python -m black . --check --diff

      - name: Lint check (Flake8)
        run: python -m flake8

      - name: Ensure 7-Zip is available
        run: |
          if (-not (Get-Command 7z -ErrorAction SilentlyContinue)) {
            choco install 7zip -y
            $env:Path += ";C:\Program Files\7-Zip"
          }

      - name: Download ffmpeg bundle and stage binaries
        run: |
          New-Item -ItemType Directory -Force -Path bin | Out-Null
          iwr -Uri https://www.gyan.dev/ffmpeg/builds/ffmpeg-git-full.7z -OutFile ffmpeg.7z
          7z x ffmpeg.7z -y | Out-Null
          $exe   = Get-ChildItem -Recurse -Filter ffmpeg.exe  | Select-Object -First 1
          $probe = Get-ChildItem -Recurse -Filter ffprobe.exe | Select-Object -First 1
          if (-not $exe -or -not $probe) { throw "Could not locate ffmpeg.exe/ffprobe.exe after extraction." }
          Copy-Item $exe.FullName   bin\ffmpeg.exe   -Force
          Copy-Item $probe.FullName bin\ffprobe.exe  -Force

      - name: Build exe
        run: |
          python -m PyInstaller --onefile main.py `
            --windowed `
            --noconfirm `
            --name TinyTVTool `
            --add-binary "bin/ffmpeg.exe;bin" `
            --add-binary "bin/ffprobe.exe;bin"
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          Copy-Item dist\TinyTVTool.exe artifacts\TinyTVTool.exe -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TinyTVTool-release-${{ github.sha }}
          path: artifacts/TinyTVTool.exe
          if-no-files-found: error

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ github.run_number }}
          name: TinyTVTool Release ${{ github.run_number }}
          draft: true
          prerelease: false
          generate_release_notes: true
          files: artifacts/TinyTVTool.exe
